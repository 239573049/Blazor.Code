@using Masa.Blazor.Extensions.Languages.Razor
@using Microsoft.JSInterop
@inject KeyEventBus<string> _KeyEventBus;
@inject IPopupService PopupService
@inject IJSRuntime JsRuntime
@inject IServiceProvider serviceProvider
@if (componenType == null)
{
    <h1>Hello, world!</h1>
}
else
{
    <MApp>
        <DynamicComponent Type="componenType"></DynamicComponent>
    </MApp>
}

@code
{
    private Type? componenType;

    protected override async Task OnInitializedAsync()
    {
    // 订阅编译事件
        _KeyEventBus.Subscription(BlazorCodeConstant.RenderComponent, async (value) =>
        {
            try
            {
                componenType = RazorCompile.CompileToType(new CompileRazorOptions
                {
                    Code = value,
                    ConcurrentBuild = false
                });

                _ = InvokeAsync(StateHasChanged);
            }
            catch (Exception e)
            {
                await JsRuntime.InvokeVoidAsync("window.postMessage", new { type = "error", message = e.Message });
                componenType = null;
            }
        });

    // bootstrap 和 masa的组件需要单独处理

        _KeyEventBus.Subscription("preview-masa", async (value) =>
        {
            try
            {
                value = value.StartsWith("Blazor/Code/Shared/Examples") ? value : "Blazor/Code/Shared/Examples" + value;
                componenType = typeof(BlazorCodeConstant).Assembly.GetType(value.Replace("/", "."));
                if (BlazorCodeSharedExtension.CodeEnvironment == CodeEnvironment.WebAssembly)
                {
                    var http = serviceProvider.GetService<HttpClient>();
                    var code = await http.GetStringAsync($"_content/Blazor.Code.Shared/pages/masa/{value.Replace("Blazor/Code/Shared/Examples/masa/", "")}.txt");
                    if (!string.IsNullOrEmpty(code))
                    {
                        await JsRuntime.InvokeVoidAsync("window.postMessage", new { type = "set-current-value", value = code });
                    }
                }
                else
                {
                    var path = Path.Combine(AppContext.BaseDirectory, "wwwroot", $"_content/Blazor.Code.Shared/pages/masa/{value.Replace("Blazor/Code/Shared/Examples/masa/", "")}.txt");

                    var file = await File.ReadAllTextAsync(path);
                    if (!string.IsNullOrEmpty(file))
                    {
                        await JsRuntime.InvokeVoidAsync("window.postMessage", new { type = "set-current-value", value = file });
                    }
                }
                _ = InvokeAsync(StateHasChanged);
            }
            catch (Exception e)
            {
                await JsRuntime.InvokeVoidAsync("window.postMessage", new { type = "error", message = e.Message });
                componenType = null;
            }
        });

        await base.OnInitializedAsync();
    }
}